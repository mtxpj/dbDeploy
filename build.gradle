buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
     classpath "mysql:mysql-connector-java:5.1.34"
     classpath 'com.dbdeploy:dbdeploy-ant:3.0M3'
     classpath 'net.sourceforge.jtds:jtds:1.3.1' // to verify
    }
}

apply plugin: 'java'

project.ext {
  mysqllocal = 'profiles/mysqllocal.properties'
  mssqllocal = 'profiles/mssqllocal.properties'

  dbDriver = 'com.mysql.jdbc.Driver'
  dbUrl = 'jdbc:mysql://localhost/db_depl'
  dbUsername = 'db_depl'
  dbPassword = 'db_depl'
  dbDir = 'profiles'
  dbms = 'dbms'
  undooutputfile = 'profiles/mysql_local/undo_last_change.sql'
  changelogFile = 'profiles/mysql_local/create_changelog_table.sql'
}

def DB_GROUP = 'Actual DbDeploy Group'
def PARTIAL_GROUP = 'DbDeploy Partial'
def ANT_GROUP = 'Ant Original Group'
def UPDATE_DB_DESCRIPTION = 'Give parameter of database you want to update as value for key "db".'
def WRONG_PARAMETER = 'ERROR: Provide correct parameter.'

// working custom tasks:
task updateDb <<{
  tasks.chooseProfile.execute()
  tasks.updateDatabase.execute()
}
updateDb.group = DB_GROUP
updateDb.description = UPDATE_DB_DESCRIPTION

task createChangelog <<{
  tasks.chooseProfile.execute()
  tasks.createChangelogTable.execute()
}
createChangelog.group = DB_GROUP

task undo << {
  tasks.chooseProfile.execute()
  tasks.undoLastChange.execute()
}
undo.group = DB_GROUP

// tasks methods
task chooseProfile << {
  if (db=="mysql") {
    project.ext.set("file", mysqllocal)
    tasks.loadProperties.execute()
  println "Profile: " +db +"\nProperty file: "+ file
  } else if (db=="mssql") {
    project.ext.set("file", mssqllocal)
    println "> Profile: " +db +"\n> Property file: "+ file
    tasks.loadProperties.execute()
  } else {
    println WRONG_PARAMETER
  }
}
chooseProfile.group = PARTIAL_GROUP

task loadProperties << {
  Properties props = new Properties() 
  props.load(new FileInputStream(project.ext.file)) 
  println "> Loaded properties:"
   props.each {
     project.ext[it.key] = it.value
     println it.key + ":                " + it.value
   }
 }
loadProperties.group = PARTIAL_GROUP

// ant tasks
task updateDatabase << {
  ant.taskdef(name: 'dbdeploy', 
              classname: 'com.dbdeploy.AntTarget', 
              classpath: project.buildscript.configurations.classpath.asPath)


  ant.dbdeploy(driver: dbDriver,
    url: dbUrl,
    userid: dbUsername, 
    password: dbPassword, 
    dir: dbDir,
    dbms: dbms,
    undooutputfile: undooutputfile)
}
updateDatabase.group = ANT_GROUP

task createChangelogTable << {
  ant.sql(driver: dbDriver, 
          url: dbUrl, 
          userid: dbUsername,
          password: dbPassword,
          encoding: 'UTF-8',
          classpath: project.buildscript.configurations.classpath.asPath) {

      fileset(file: changelogFile)
  }
}
createChangelogTable.group = ANT_GROUP

task undoLastChange << {
  ant.sql(driver: dbDriver,
          url: dbUrl,
          userid: dbUsername,
          password: dbPassword,
          encoding: 'UTF-8',
          classpath: project.buildscript.configurations.classpath.asPath) {
      fileset(file: undooutputfile)
  }
}
undoLastChange.group = ANT_GROUP

// wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

// helping tasks
task printBuildScriptClasspath << {
println project.buildscript.configurations.classpath.asPath
}

task hello << {
    String greeting = 'hello from Ant'
    ant.echo(message: greeting)
}